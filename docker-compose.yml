version: "3"

services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - redis
    restart: always

  weather_db:
    container_name: weather_db
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kate
      POSTGRES_PASSWORD: aaaddda
      POSTGRES_DB: new_test
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: always

  weather-api:
    container_name: weather-api
    build:
      context: .
    command: >
      sh -c "python /usr/scr/weather-drf/manage.py collectstatic --noinput &&
             python /usr/scr/weather-drf/manage.py makemigrations &&
             python /usr/scr/weather-drf/manage.py migrate &&
             python /usr/scr/weather-drf/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/scr/weather-drf
    ports:
      - "8000:8000"
    depends_on:
      - weather_db
    networks:
      - postgres
      - redis
    restart: always

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: mail@mail.ru
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - '5050:80'
    networks:
      - postgres
    depends_on:
      - weather_db

  celery-worker:
    restart: always
    build:
      context: .
    command: celery -A weather_app worker -l INFO
    volumes:
      - .:/usr/scr/weather-drf
    depends_on:
      - weather_db
      - redis

    networks:
      - postgres
      - redis
      - celery-worker

  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A weather_app beat -l INFO
    volumes:
      - .:/usr/scr/weather-drf
    depends_on:
      - weather_db
      - redis
    networks:
      - postgres
      - redis

  flower:
    restart: always
    build:
      context: .
    command: celery -A weather_app flower
    volumes:
      - .:/usr/scr/weather-drf
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - celery-worker
      - redis
    networks:
      - postgres
      - redis
      - celery-worker

volumes:
  postgres_data:


networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge
  celery-worker:
    driver: bridge
